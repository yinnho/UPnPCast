E:\UPnPCast\app-demo\build.gradle.kts:13: Warning: Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details. [OldTargetApi]
        targetSdk = 34
        ~~~~~~~~~~~~~~

   Explanation for issues of type "OldTargetApi":
   When your application or sdk runs on a version of Android that is more
   recent than your targetSdkVersion specifies that it has been tested with,
   various compatibility modes kick in. This ensures that your application
   continues to work, but it may look out of place. For example, if the
   targetSdkVersion is less than 14, your app may get an option button in the
   UI.

   To fix this issue, set the targetSdkVersion to the highest available value.
   Then test your app to make sure everything works correctly. You may want to
   consult the compatibility notes to see what changes apply to each version
   you are adding support for:
   https://developer.android.com/reference/android/os/Build.VERSION_CODES.html
   as well as follow this guide:
   https://developer.android.com/distribute/best-practices/develop/target-sdk.
   html

   https://developer.android.com/distribute/best-practices/develop/target-sdk.html

E:\UPnPCast\app-demo\src\main\res\layout\activity_settings.xml:17: Warning: Use SwitchCompat from AppCompat or MaterialSwitch from Material library [UseSwitchCompatOrMaterialXml from androidx.appcompat]
    <Switch
    ^
E:\UPnPCast\app-demo\src\main\res\layout\activity_settings.xml:24: Warning: Use SwitchCompat from AppCompat or MaterialSwitch from Material library [UseSwitchCompatOrMaterialXml from androidx.appcompat]
    <Switch
    ^

   Explanation for issues of type "UseSwitchCompatOrMaterialXml":
   Use SwitchCompat from AppCompat or MaterialSwitch from Material library

   Vendor: Android Open Source Project
   Identifier: androidx.appcompat
   Feedback: https://issuetracker.google.com/issues/new?component=460343

E:\UPnPCast\app-demo\build.gradle.kts:39: Warning: A newer version of androidx.core:core-ktx than 1.12.0 is available: 1.16.0 [GradleDependency]
    implementation("androidx.core:core-ktx:1.12.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\build.gradle.kts:40: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.0 [GradleDependency]
    implementation("androidx.appcompat:appcompat:1.6.1")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\build.gradle.kts:41: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.1.4 is available: 2.2.1 [GradleDependency]
    implementation("androidx.constraintlayout:constraintlayout:2.1.4")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\build.gradle.kts:42: Warning: A newer version of com.google.android.material:material than 1.10.0 is available: 1.12.0 [GradleDependency]
    implementation("com.google.android.material:material:1.10.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

E:\UPnPCast\app-demo\src\main\java\com\yinnho\upnpcast\demo\adapter\DeviceListAdapter.kt:36: Warning: It will always be more efficient to use more specific change events if you can. Rely on notifyDataSetChanged as a last resort. [NotifyDataSetChanged]
        notifyDataSetChanged()
        ~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "NotifyDataSetChanged":
   The RecyclerView adapter's onNotifyDataSetChanged method does not specify
   what about the data set has changed, forcing any observers to assume that
   all existing items and structure may no longer be valid. `LayoutManager`s
   will be forced to fully rebind and relayout all visible views.

E:\UPnPCast\app-demo\src\main\java\com\yinnho\upnpcast\helper\MemoryMonitor.kt:96: Warning: Do not place Android context classes in static fields (static reference to MemoryMonitor which has field context pointing to Context); this is a memory leak [StaticFieldLeak]
        private var instance: MemoryMonitor? = null
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "StaticFieldLeak":
   A static field will leak contexts.

   Non-static inner classes have an implicit reference to their outer class.
   If that outer class is for example a Fragment or Activity, then this
   reference means that the long-running handler/loader/task will hold a
   reference to the activity which prevents it from getting garbage
   collected.

   Similarly, direct field references to activities and fragments from these
   longer running instances can cause leaks.

   ViewModel classes should never point to Views or non-application Contexts.

E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:2: Warning: The resource R.layout.activity_media_control appears to be unused [UnusedResources]
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
^
E:\UPnPCast\app-demo\src\main\res\layout\activity_settings.xml:2: Warning: The resource R.layout.activity_settings appears to be unused [UnusedResources]
<LinearLayout 
^
E:\UPnPCast\app-demo\src\main\res\layout\fragment_test_helper.xml:2: Warning: The resource R.layout.fragment_test_helper appears to be unused [UnusedResources]
<androidx.constraintlayout.widget.ConstraintLayout 
^

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:189: Warning: Buttons in button bars should be borderless; use style="?android:attr/buttonBarButtonStyle" (and ?android:attr/buttonBarStyle on the parent) [ButtonStyle]
        <Button
         ~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:197: Warning: Buttons in button bars should be borderless; use style="?android:attr/buttonBarButtonStyle" (and ?android:attr/buttonBarStyle on the parent) [ButtonStyle]
        <Button
         ~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:205: Warning: Buttons in button bars should be borderless; use style="?android:attr/buttonBarButtonStyle" (and ?android:attr/buttonBarStyle on the parent) [ButtonStyle]
        <Button
         ~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:213: Warning: Buttons in button bars should be borderless; use style="?android:attr/buttonBarButtonStyle" (and ?android:attr/buttonBarStyle on the parent) [ButtonStyle]
        <Button
         ~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\fragment_test_helper.xml:29: Warning: Buttons in button bars should be borderless; use style="?android:attr/buttonBarButtonStyle" (and ?android:attr/buttonBarStyle on the parent) [ButtonStyle]
        <Button
         ~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\fragment_test_helper.xml:37: Warning: Buttons in button bars should be borderless; use style="?android:attr/buttonBarButtonStyle" (and ?android:attr/buttonBarStyle on the parent) [ButtonStyle]
        <Button
         ~~~~~~

   Explanation for issues of type "ButtonStyle":
   Button bars typically use a borderless style for the buttons. Set the
   style="?android:attr/buttonBarButtonStyle" attribute on each of the
   buttons, and set style="?android:attr/buttonBarStyle" on the parent layout

   https://d.android.com/r/studio-ui/designer/material/dialogs

E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:73: Warning: Avoid using sizes smaller than 11sp: 10sp [SmallSp]
            android:textSize="10sp"
            ~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:83: Warning: Avoid using sizes smaller than 11sp: 10sp [SmallSp]
            android:textSize="10sp"
            ~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "SmallSp":
   Avoid using sizes smaller than 11sp.

E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:49: Warning: Missing autofillHints attribute [Autofill]
    <EditText
     ~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:98: Warning: Missing autofillHints attribute [Autofill]
    <EditText
     ~~~~~~~~

   Explanation for issues of type "Autofill":
   Specify an autofillHints attribute when targeting SDK version 26 or higher
   or explicitly specify that the view is not important for autofill. Your app
   can help an autofill service classify the data correctly by providing the
   meaning of each view that could be autofillable, such as views representing
   usernames, passwords, credit card fields, email addresses, etc.

   The hints can have any value, but it is recommended to use predefined
   values like 'username' for a username or 'creditCardNumber' for a credit
   card number. For a list of all predefined autofill hint constants, see the
   AUTOFILL_HINT_ constants in the View reference at
   https://developer.android.com/reference/android/view/View.html.

   You can mark a view unimportant for autofill by specifying an
   importantForAutofill attribute on that view or a parent view. See
   https://developer.android.com/reference/android/view/View.html#setImportant
   ForAutofill(int).

   https://developer.android.com/guide/topics/text/autofill.html

E:\UPnPCast\app-demo\build.gradle.kts:39: Warning: Use version catalog instead (androidx.core:core-ktx is already available as androidx-core-ktx, but using version 1.16.0 instead) [UseTomlInstead]
    implementation("androidx.core:core-ktx:1.12.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\build.gradle.kts:40: Warning: Use version catalog instead (androidx.appcompat:appcompat is already available as androidx-appcompat, but using version 1.7.0 instead) [UseTomlInstead]
    implementation("androidx.appcompat:appcompat:1.6.1")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\build.gradle.kts:41: Warning: Use version catalog instead [UseTomlInstead]
    implementation("androidx.constraintlayout:constraintlayout:2.1.4")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\build.gradle.kts:42: Warning: Use version catalog instead (com.google.android.material:material is already available as material, but using version 1.12.0 instead) [UseTomlInstead]
    implementation("com.google.android.material:material:1.10.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UseTomlInstead":
   If your project is using a libs.versions.toml file, you should place all
   Gradle dependencies in the TOML file. This lint check looks for version
   declarations outside of the TOML file and suggests moving them (and in the
   IDE, provides a quickfix to performing the operation automatically).

E:\UPnPCast\app-demo\src\main\java\com\yinnho\upnpcast\demo\adapter\DeviceListAdapter.kt:67: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
                deviceName.text = "${device.name} ${getDeviceTypeIcon(device)}"
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\java\com\yinnho\upnpcast\demo\adapter\DeviceListAdapter.kt:78: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
                deviceIpPort.text = "IP地址: ${device.address}"
                                    ~~~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\java\com\yinnho\upnpcast\demo\adapter\DeviceListAdapter.kt:78: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
                deviceIpPort.text = "IP地址: ${device.address}"
                                     ~~~~~~
E:\UPnPCast\app-demo\src\main\java\com\yinnho\upnpcast\demo\adapter\DeviceListAdapter.kt:100: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
                deviceIpPort.text = "IP地址: 未知"
                                     ~~~~~~~~
E:\UPnPCast\app-demo\src\main\java\com\yinnho\upnpcast\demo\MainActivity.kt:172: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        deviceCountText.text = "发现 $deviceCount 个设备"
                               ~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\java\com\yinnho\upnpcast\demo\MainActivity.kt:342: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
            text = "调节音量 (0-100)"
                    ~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\java\com\yinnho\upnpcast\demo\MainActivity.kt:353: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
            text = "音量: 50%"
                    ~~~~~~~
E:\UPnPCast\app-demo\src\main\java\com\yinnho\upnpcast\demo\MainActivity.kt:360: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
                volumeText.text = "音量: $progress%"
                                  ~~~~~~~~~~~~~~~~

   Explanation for issues of type "SetTextI18n":
   When calling TextView#setText
   * Never call Number#toString() to format numbers; it will not handle
   fraction separators and locale-specific digits properly. Consider using
   String#format with proper format specifications (%d or %f) instead.
   * Do not pass a string literal (e.g. "Hello") to display text. Hardcoded
   text can not be properly translated to other languages. Consider using
   Android resource strings instead.
   * Do not build messages by concatenating text chunks. Such messages can not
   be properly translated.

   https://developer.android.com/guide/topics/resources/localization.html

E:\UPnPCast\app-demo\src\main\res\layout\activity_main.xml:24: Warning: Hardcoded string "UPnP 设备", should use @string resource [HardcodedText]
            android:text="UPnP 设备"
            ~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_main.xml:33: Warning: Hardcoded string "刷新", should use @string resource [HardcodedText]
            android:text="刷新"
            ~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_main.xml:42: Warning: Hardcoded string "设置", should use @string resource [HardcodedText]
            android:text="设置"
            ~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_main.xml:70: Warning: Hardcoded string "正在搜索设备...", should use @string resource [HardcodedText]
            android:text="正在搜索设备..."
            ~~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_main.xml:78: Warning: Hardcoded string "0 台设备", should use @string resource [HardcodedText]
            android:text="0 台设备"
            ~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_main.xml:109: Warning: Hardcoded string "📱", should use @string resource [HardcodedText]
            android:text="📱"
            ~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_main.xml:116: Warning: Hardcoded string "未发现设备", should use @string resource [HardcodedText]
            android:text="未发现设备"
            ~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_main.xml:125: Warning: Hardcoded string "请确保设备连接到同一WiFi网络n并开启了DLNA/UPnP功能", should use @string resource [HardcodedText]
            android:text="请确保设备连接到同一WiFi网络\n并开启了DLNA/UPnP功能"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:26: Warning: Hardcoded string "连接的设备", should use @string resource [HardcodedText]
            android:text="连接的设备"
            ~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:34: Warning: Hardcoded string "设备名称", should use @string resource [HardcodedText]
            android:text="设备名称"
            ~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:44: Warning: Hardcoded string "视频链接:", should use @string resource [HardcodedText]
        android:text="视频链接:"
        ~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:53: Warning: Hardcoded string "输入视频URL或选择示例", should use @string resource [HardcodedText]
        android:hint="输入视频URL或选择示例"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:72: Warning: Hardcoded string "示例视频1", should use @string resource [HardcodedText]
            android:text="示例视频1"
            ~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:82: Warning: Hardcoded string "示例视频2", should use @string resource [HardcodedText]
            android:text="示例视频2"
            ~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:92: Warning: Hardcoded string "视频标题:", should use @string resource [HardcodedText]
        android:text="视频标题:"
        ~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:102: Warning: Hardcoded string "输入视频标题", should use @string resource [HardcodedText]
        android:hint="输入视频标题"
        ~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:122: Warning: Hardcoded string "当前媒体", should use @string resource [HardcodedText]
            android:text="当前媒体"
            ~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:131: Warning: Hardcoded string "未播放", should use @string resource [HardcodedText]
            android:text="未播放"
            ~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:156: Warning: Hardcoded string "00:00", should use @string resource [HardcodedText]
                android:text="00:00"
                ~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:168: Warning: Hardcoded string "00:00", should use @string resource [HardcodedText]
                android:text="00:00"
                ~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:194: Warning: Hardcoded string "▶ 播放", should use @string resource [HardcodedText]
            android:text="▶ 播放"
            ~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:202: Warning: Hardcoded string "⏸ 暂停", should use @string resource [HardcodedText]
            android:text="⏸ 暂停"
            ~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:210: Warning: Hardcoded string "⏵ 继续", should use @string resource [HardcodedText]
            android:text="⏵ 继续"
            ~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:218: Warning: Hardcoded string "⏹ 停止", should use @string resource [HardcodedText]
            android:text="⏹ 停止"
            ~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:236: Warning: Hardcoded string "音量控制", should use @string resource [HardcodedText]
            android:text="音量控制"
            ~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:252: Warning: Hardcoded string "🔉", should use @string resource [HardcodedText]
                android:text="🔉"
                ~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:269: Warning: Hardcoded string "🔊", should use @string resource [HardcodedText]
                android:text="🔊"
                ~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_media_control.xml:279: Warning: Hardcoded string "音量: 50%", should use @string resource [HardcodedText]
            android:text="音量: 50%"
            ~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_settings.xml:12: Warning: Hardcoded string "设置", should use @string resource [HardcodedText]
        android:text="设置"
        ~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_settings.xml:21: Warning: Hardcoded string "自动连接上次设备", should use @string resource [HardcodedText]
        android:text="自动连接上次设备"
        ~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_settings.xml:28: Warning: Hardcoded string "启用详细日志", should use @string resource [HardcodedText]
        android:text="启用详细日志"
        ~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_settings.xml:41: Warning: Hardcoded string "搜索超时设置(秒):", should use @string resource [HardcodedText]
        android:text="搜索超时设置(秒):"
        ~~~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_settings.xml:64: Warning: Hardcoded string "30 秒", should use @string resource [HardcodedText]
            android:text="30 秒"
            ~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_settings.xml:80: Warning: Hardcoded string "清除设备缓存", should use @string resource [HardcodedText]
        android:text="清除设备缓存"
        ~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\activity_settings.xml:92: Warning: Hardcoded string "返回", should use @string resource [HardcodedText]
        android:text="返回" />
        ~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\fragment_test_helper.xml:13: Warning: Hardcoded string "UPnPCast测试助手", should use @string resource [HardcodedText]
        android:text="UPnPCast测试助手"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\fragment_test_helper.xml:34: Warning: Hardcoded string "开始记录", should use @string resource [HardcodedText]
            android:text="开始记录"
            ~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\fragment_test_helper.xml:42: Warning: Hardcoded string "停止记录", should use @string resource [HardcodedText]
            android:text="停止记录"
            ~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\fragment_test_helper.xml:51: Warning: Hardcoded string "开始自动测试", should use @string resource [HardcodedText]
        android:text="开始自动测试"
        ~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\fragment_test_helper.xml:59: Warning: Hardcoded string "测试状态:", should use @string resource [HardcodedText]
        android:text="测试状态:"
        ~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\fragment_test_helper.xml:68: Warning: Hardcoded string "等待开始...", should use @string resource [HardcodedText]
        android:text="等待开始..."
        ~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\fragment_test_helper.xml:76: Warning: Hardcoded string "内存状态:", should use @string resource [HardcodedText]
        android:text="内存状态:"
        ~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\fragment_test_helper.xml:85: Warning: Hardcoded string "等待数据...", should use @string resource [HardcodedText]
        android:text="等待数据..."
        ~~~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\fragment_test_helper.xml:93: Warning: Hardcoded string "缓存统计:", should use @string resource [HardcodedText]
        android:text="缓存统计:"
        ~~~~~~~~~~~~~~~~~~~~
E:\UPnPCast\app-demo\src\main\res\layout\fragment_test_helper.xml:109: Warning: Hardcoded string "等待数据...", should use @string resource [HardcodedText]
            android:text="等待数据..."
            ~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

0 errors, 79 warnings
